Практическая часть

Для анализа характеристих приложения были проведены несколько тестов производительности:

Тест скорости вычислений.
Тест накладных расходов при вызовах между средами выполнения.
Тест скорости преобразования данных при передаче между средами выполнения.
Тест скорости работы с DOM-деревом в WEB-браузере.

Также было построенно демонстрационное приложение, позволяющее быстро запускать тесты и получать наглядные данные. В процессе его создания было создано несколько Blazor-компонентов которые могут быть переиспользованны в других проектах. Подробнее о созданных компонентах см. в следующем разделе.

Демонстрационное приложение содержит несколько однообразных вкладок с тестами позволяющих запускать их с разными параметрами и варьировать результаты его работы. Подробнее о работе с тестами см. в описании компонента PerformanceTester в следующем разделе.




Создание дополнительных Blazor-компонентов

В процессе реализации демонстрационного приложения было создано несколько дополнительных компонентов пользовательского интерфейса, которые могут быть переиспользованны в других проектах. Компоненты легко мигрируются из проекта в проект, достаточно перенести файл с кодом компонента (*.cshtml), который содержит разметку и логику компонента. Если компонент использует другие компоненты, то необходимо так же перенести их .cshtml файлы. А далее его можно использовать в любом желаемом компоненте или странице. Так же можно использовать nuget-пакеты для упрощения подключеня компонентов к другим проектам.

Компонент PerformanceTester

Для обобщения реализации страниц с тестами производительности был создан компонент PerformanceTester. Он упрощает реализацию теста, имеет параметр "Action", который получает исполняемый делегат (указатель на функцию).

Данный компонент отображает различные опции для запуска теста:

количество запусков
передаваемый аргумент
количество пропущенных запусков для повышения точности (из-за "прогрева" кэша)
включение/отключение подробностей по каждому запуску

Так же содержит два режима запуска тестов:
Одниночный запуск - запуск серии тестов с заданным аргуметом
Многократный запуск - множество запусков с постепенным увеличением аргумента

Многократный запуск выдает данные удобные для построения графиков. Дополнительно присутствует кнопка для отчистки очета о запусках. На данном компоненте базируются все страцицы запускающие тесты.

Компонент ReactRenderer

Компонент ReactRenderer был создан для упрощения включения в Blazor-приложения разметки сгенерированной библиотекой react он принимает в себя JavaSctipt функцию генерирующую ReactElement и её аргументы, и создает DOM-element с уникальным идентификатором, а далее вызывается функция React.render принимающая сгенерированный ReactElement и идентификатор контейнера, которая отображает разметку на странице.

Компоненты BlazorButton, BlazorInput, BlazorPanel

Для упращения разработки пользовательского интерфеса были разработы компонты BlazorButton, BlazorInput, BlazorPanel. Компоненты BlazorButton и BlazorInput, являются обертками над html-элементами input и button дополменные средствами локализации и стилизации. BlazorPanel является панелью с заголовком по нажатию на который её содержимое "складывается" в заголовок. Этот компонет так же поддерживает локализацию и стилизацию. Параметры стилей и локализации могут быть переданы либо через DI-сервис, либо через каскадные параметры Blazor - это позволяет задавать глобальные стили в рамках всего приложения и переопредялять их на части приложения (например в определенном окне через каскадные параметры.

